Before docker :
-we are using Hypervisor
-that is 
->

Guest OS---this iamage  we can send to the testing teams so that every thing in same image(application, dependencies, os level feauters, version etc.) becuase of this the application will run any machine(just need to create instances with the help of this image.)
Hypervisor
Host OS
Hardware

but the drwaback is--> if we want run a multiple applications in that case we are buying multiple OS's thats costs more.
--> because of this problem Docker comes into picture.
-->just we need to install the  docer on top of Host Os and we can create a multiple containers and we can run multiple applications.
the advantage of Docker :) it will share a single OS to the multiple cotainers. so we can reduce the cost as well as the time.
--> The containers can be created with the help of images;
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


Docker:)
----------
-->Docker is an open platform for developing, shipping, and running applications. Docker enables you to separate your applications from your infrastructure so you can deliver software quickly.
--> Open source container technology.
-->
Senario-->
 we have to install ansible
 sudo apt-get update
 sudo apt install ansible
 this is before
------------------------
but with docker-->
 docker run -d-p 3000:3000 ansible/ansible
 (graphana -is monitoring tool)
=========================
Container:)
------------
Docker provides a ability to package and
run an application in a loosely isolated enviornment called 
container.

Virtualization:)
----------------
--> Creation of logical objects version in place of actual version.
ex:-> Virtual computer hardware platform, virtual
 storage, virtual lans, VM.

Hardware Virtualization:)
--------------------------
--> Creating VM that acts like a real machine with OS.
----------------------------------------------------
Microservices:)
---------------
-->It is architectural pattern allowing better agility through services.
-->Loosely coupled.
-->highly maintainable and testable.
-->Independently deployable.
-------------------------------
-------------------------------
-->Docker is a perfect fit to Develop and Deploy Microservices.
--> A microservice being run in one container.
--> A microservice being Independently deployable through
  <<isolated>> and <<Self-sufficient>>Container.
-----------------------------------------
Docker-> Isolation and Resource Limitation:
--> Docker is relying on two main kernel features:
  1) namsspaces--> It provides isolation enviornment for containers.
      -->Processes running within a container cannot se and les effect
      , processes running another container, or in the host system.
  2) cgroups-->(Control Groups) are  key component of linux containers.
     They implement resource accounting and limiting.

----------------------------------------------------------
Docker Objects:)
--------------------
Container: runable instance of image.
Images: Read-Only templates with set of instructions for creating a docker Container.
Networks: It is a Interface to connect the container to external networks using the host machine's
           network connection.
Volumes: Mechanism for persisting data generated by and used by containers.
Registry: Public or Private registry of Docker Images.
Services: Enable multi-host, multi-container deloyments.
-------------------------------------------
Architecture:)
Dockerd: It will built and push images.
OCI: open container initiative
Youtube:) Gaurav Sharma
==============================================
==============================================
sudo su  --> switching between root and non-root
